<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Demo on DLT-META</title><link>https://databrickslabs.github.io/dlt-meta/demo/</link><description>Recent content in Demo on DLT-META</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 04 Aug 2021 14:50:11 -0400</lastBuildDate><atom:link href="https://databrickslabs.github.io/dlt-meta/demo/index.xml" rel="self" type="application/rss+xml"/><item><title>DAIS DEMO</title><link>https://databrickslabs.github.io/dlt-meta/demo/dais/</link><pubDate>Wed, 04 Aug 2021 14:25:26 -0400</pubDate><guid>https://databrickslabs.github.io/dlt-meta/demo/dais/</guid><description>DAIS 2023 DEMO: DAIS 2023 Session Recording This demo showcases DLT-META&amp;rsquo;s capabilities of creating Bronze and Silver DLT pipelines with initial and incremental mode automatically.
Customer and Transactions feeds for initial load Adds new feeds Product and Stores to existing Bronze and Silver DLT pipelines with metadata changes. Runs Bronze and Silver DLT for incremental load for CDC events Steps to launch DAIS demo in your Databricks workspace: Launch Terminal/Command promt</description></item><item><title>Tech Summit DEMO</title><link>https://databrickslabs.github.io/dlt-meta/demo/techsummit/</link><pubDate>Wed, 04 Aug 2021 14:25:26 -0400</pubDate><guid>https://databrickslabs.github.io/dlt-meta/demo/techsummit/</guid><description>Databricks Tech Summit FY2024 DEMO: This demo will launch auto generated tables(100s) inside single bronze and silver DLT pipeline using dlt-meta.
Launch Terminal/Command prompt
Install Databricks CLI
git clone https://github.com/databrickslabs/dlt-meta.git
cd dlt-meta
Set python environment variable into terminal
export PYTHONPATH=&amp;lt;&amp;lt;local dlt-meta path&amp;gt;&amp;gt; Run the command python demo/launch_techsummit_demo.py --username=ravi.gawai@databricks.com --source=cloudfiles --cloud_provider_name=aws --dbr_version=13.3.x-scala2.12 --dbfs_path=dbfs:/techsummit-dlt-meta-demo-automated
cloud_provider_name : aws or azure or gcp</description></item><item><title>Append FLOW Autoloader Demo</title><link>https://databrickslabs.github.io/dlt-meta/demo/append_flow_cf/</link><pubDate>Wed, 04 Aug 2021 14:25:26 -0400</pubDate><guid>https://databrickslabs.github.io/dlt-meta/demo/append_flow_cf/</guid><description>Append FLOW Autoloader Demo: This demo will perform following tasks:
Read from different source paths using autoloader and write to same target using dlt.append_flow API Read from different delta tables and write to same silver table using append_flow API Add file_name and file_path to target bronze table for autoloader source using File metadata column Append flow with autoloader Launch Terminal/Command prompt
Install Databricks CLI</description></item><item><title>Append FLOW Eventhub Demo</title><link>https://databrickslabs.github.io/dlt-meta/demo/append_flow_eh/</link><pubDate>Wed, 04 Aug 2021 14:25:26 -0400</pubDate><guid>https://databrickslabs.github.io/dlt-meta/demo/append_flow_eh/</guid><description>Append FLOW Autoloader Demo: Read from different eventhub topics and write to same target tables using dlt.append_flow API Steps: Launch Terminal/Command prompt
Install Databricks CLI
git clone https://github.com/databrickslabs/dlt-meta.git cd dlt-meta Set python environment variable into terminal
dlt_meta_home=$(pwd) export PYTHONPATH=$dlt_meta_home Eventhub
Needs eventhub instance running
Need two eventhub topics first for main feed (eventhub_name) and second for append flow feed (eventhub_name_append_flow)</description></item><item><title>Silver Fanout Demo</title><link>https://databrickslabs.github.io/dlt-meta/demo/silver_fanout/</link><pubDate>Wed, 04 Aug 2021 14:25:26 -0400</pubDate><guid>https://databrickslabs.github.io/dlt-meta/demo/silver_fanout/</guid><description>Silver Fanout Demo This demo will perform following steps Showcase onboarding process for silver fanout pattern Run onboarding for the bronze cars table, which contains data from various countries. Run onboarding for the silver tables, which have a where_clause based on the country condition in silver_transformations_cars.json. Run Bronze for cars tables Run onboarding for the silver tables, fanning out from the bronze cars tables to country-specific tables such as cars_usa, cars_uk, cars_germany, and cars_japan.</description></item></channel></rss>